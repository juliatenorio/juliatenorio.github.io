[
  {
    "objectID": "MarijuanaSimulation.html",
    "href": "MarijuanaSimulation.html",
    "title": "Marijuana Legalization Simulation",
    "section": "",
    "text": "library(tidyverse)\nlibrary(openintro)\nlibrary(purrr)"
  },
  {
    "objectID": "MarijuanaSimulation.html#code-for-simulation",
    "href": "MarijuanaSimulation.html#code-for-simulation",
    "title": "Marijuana Legalization Simulation",
    "section": "Code For Simulation",
    "text": "Code For Simulation\n\nThis dataset shows the number of people who chose to oppose or support the legalization of marijuana. This simulation aims to determine if there is a difference between the proportion of supporters/opposers. The null hypothesis is that there is no difference between the proportion of people who support the legalization of marijuana and the proportion of people who oppose the legalization (50% of people support either side). The alternative hypothesis is that there is a difference between the two groups.\n\nset.seed(47) \n\nsupport_obs &lt;- leg_mari |&gt; \n  summarize(prop_support = mean(response == \"support\")) |&gt;\n  pull()\n\nrandom_response &lt;- function(rep, num_people) {\n  response = sample(c(\"support\", \"oppose\"), size = num_people, replace = TRUE, prob = c(0.5, 0.5))\n  return(mean(response == \"support\"))\n}\n\nnum_sim &lt;- 4747\nsupport_random &lt;- map_dbl(1:num_sim, random_response, num_people = 47)\n\nsupport_random |&gt;\n  data.frame() |&gt; \n  ggplot(aes(x = support_random)) +\n  geom_histogram(fill = \"skyblue\") +\n  geom_vline(xintercept = support_obs, color = \"red\", linetype = \"dotted\", size = 1) +\n  labs(\n    title = \"Sampling Distribution When Null is True\",\n    subtitle = \"no inherent preference for those who oppose or support marijuana\",\n    x = \"Proportion of People who Support Marijuana\"\n  )\n\n\n\n\n\n\n\np_value &lt;- sum(support_random &gt;= support_obs)/num_sim\n  \nstatistics_table &lt;- data.frame(p_value, support_obs)\nstatistics_table\n\n      p_value support_obs\n1 0.003791869    0.697479"
  },
  {
    "objectID": "MarijuanaSimulation.html#process",
    "href": "MarijuanaSimulation.html#process",
    "title": "Marijuana Legalization Simulation",
    "section": "Process",
    "text": "Process\n\nFirst, the observed statistic for the number of people who supported the proposition as about 0.697. Then, a simulation was conducted in which that the null hypothesis was assumed. In other words, the proportions were 0.5 for supporters and opposers to see if getting a statistic of 0.697 was by chance alone. After running this simulation many, many times and graphing the results, the sampling distribution showed the probabilties of getting different observed statistics."
  },
  {
    "objectID": "MarijuanaSimulation.html#analysis",
    "href": "MarijuanaSimulation.html#analysis",
    "title": "Marijuana Legalization Simulation",
    "section": "Analysis",
    "text": "Analysis\n\nFrom the graph, we can see that getting the observed statistic of about 0.697 results in a p-value of 0.004. Since the p-value is less than the standarized value of 0.05, we can reject the null hypothesis stating that 50% of the 119 survey respondents between the ages of 18 and 34 would support or oppose the legalization of marijuana. We can therefore conclude that there is evidence that there is a difference between these two proportions since getting a statistic of 0.697 for those who support marijuana occurs rarely with luck.\nSource: This dataset was from the USA Survey, collected from July 8-11. Legalization of Marijuana Support in 2010 California Survey"
  },
  {
    "objectID": "ValentinesDay.html",
    "href": "ValentinesDay.html",
    "title": "Valentine’s Day TidyTuesday",
    "section": "",
    "text": "The following graph is from the historical spending dataset. It visualizes the percentage of people who celebrate Valentine’s Day from 2010-2022\n\nggplot(historical_spending, aes(x = Year, y = PercentCelebrating, fill = Year)) + # Uses historical_spending for ggplot\n  geom_line() + # Defines x and y variables and groups color by year\n  labs (\n    x = \"Year\",\n    y = \"Percent of People Celebrating\"\n  ) + # Renames variables for clarity\n  ggtitle(\"Trend of People who Celebrate Valentine's Day\") + # Title for Graph\n  theme_minimal() + # Creates theme for graph\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),  # Center and bold the title\n    plot.subtitle = element_text(hjust = 0.5, size = 12, face = \"italic\"),  # Subtitle formatting\n    axis.title = element_text(face = \"bold\"),  # Bold axis labels\n    axis.text = element_text(size = 12),  # Make axis text bigger\n    panel.grid.major = element_line(color = \"gray\", size = 0.5),  # Lighter gridlines\n    panel.grid.minor = element_blank(), # No minor gridlines\n    legend.position = \"none\" # No Legend\n    ) \n\n\n\n\n\n\n\n\nTidyTuesday Dataset\nValentine’s Day Consumer Data"
  },
  {
    "objectID": "SummerMovies.html",
    "href": "SummerMovies.html",
    "title": "Summer Movies TidyTuesday",
    "section": "",
    "text": "The following graph displays data of summer movies comparing the relationship between movie release year and rating. According to this graph, throughout the years there are continuously more movies, and the ratings for each movie become more varied.\n\nggplot(data = summer_movies) + # Uses summer_movies for ggplot\n  geom_point(aes(x = year, y = average_rating, color = year)) + #Defines x and y variables and groups the colors by year\n  labs (\n    x = \"Years of Release\", \n    y = \"Average Rating\",\n    subtitle = \"A scatter plot showing the relationship between movie release year and rating\"\n  ) + # Renames all the variables and adds a subtitle \n  ggtitle(\"Years of Movies and their Average Rating\") + # Title for graph\n  theme_minimal() + # Creates theme for graph\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),  # Center and bold the title\n    plot.subtitle = element_text(hjust = 0.5, size = 12, face = \"italic\"),  # Subtitle formatting\n    axis.title = element_text(face = \"bold\"),  # Bold axis labels\n    axis.text = element_text(size = 12),  # Make axis text bigger\n    panel.grid.major = element_line(color = \"gray\", size = 0.5),  # Lighter gridlines\n    panel.grid.minor = element_blank())  # No minor gridlines\n\n\n\n\n\n\n\n\nTidy Tuesday Dataset Source\nSummer Movies"
  },
  {
    "objectID": "musicalpresentation.html#road-map",
    "href": "musicalpresentation.html#road-map",
    "title": "Analysis of Broadway Show Synopses and their Effect on Weekly Grosses",
    "section": "Road Map",
    "text": "Road Map\n\nEffect of ‘Musical’ keyword\nEffect of ‘Play’ keyword\nEffect of Shows Featuring Artistic Characters\nEffect of Synopsis Lengths"
  },
  {
    "objectID": "musicalpresentation.html#why-this-matters",
    "href": "musicalpresentation.html#why-this-matters",
    "title": "Analysis of Broadway Show Synopses and their Effect on Weekly Grosses",
    "section": "Why this matters",
    "text": "Why this matters\n\nImportant to know what sells\nWhat playwrights can focus on in the future"
  },
  {
    "objectID": "musicalpresentation.html#effect-of-words-in-a-synopsis-on-weekly-gross",
    "href": "musicalpresentation.html#effect-of-words-in-a-synopsis-on-weekly-gross",
    "title": "Analysis of Broadway Show Synopses and their Effect on Weekly Grosses",
    "section": "Effect of Words in a Synopsis on Weekly Gross",
    "text": "Effect of Words in a Synopsis on Weekly Gross"
  },
  {
    "objectID": "musicalpresentation.html#effect-of-words-in-a-synopsis-on-weekly-gross-1",
    "href": "musicalpresentation.html#effect-of-words-in-a-synopsis-on-weekly-gross-1",
    "title": "Analysis of Broadway Show Synopses and their Effect on Weekly Grosses",
    "section": "Effect of Words in a Synopsis on Weekly Gross",
    "text": "Effect of Words in a Synopsis on Weekly Gross"
  },
  {
    "objectID": "musicalpresentation.html#effect-of-shows-featuring-artistic-characters-on-weekly-gross",
    "href": "musicalpresentation.html#effect-of-shows-featuring-artistic-characters-on-weekly-gross",
    "title": "Analysis of Broadway Show Synopses and their Effect on Weekly Grosses",
    "section": "Effect of Shows Featuring Artistic Characters on Weekly Gross",
    "text": "Effect of Shows Featuring Artistic Characters on Weekly Gross"
  },
  {
    "objectID": "musicalpresentation.html#effect-of-synopsis-lengths-on-weekly-gross",
    "href": "musicalpresentation.html#effect-of-synopsis-lengths-on-weekly-gross",
    "title": "Analysis of Broadway Show Synopses and their Effect on Weekly Grosses",
    "section": "Effect of Synopsis Lengths on Weekly Gross",
    "text": "Effect of Synopsis Lengths on Weekly Gross"
  },
  {
    "objectID": "musicalpresentation.html#conclusion",
    "href": "musicalpresentation.html#conclusion",
    "title": "Analysis of Broadway Show Synopses and their Effect on Weekly Grosses",
    "section": "Conclusion",
    "text": "Conclusion\n\nNo significant difference\nPlaywrights should just express their creativity"
  },
  {
    "objectID": "musicalpresentation.html#thank-you",
    "href": "musicalpresentation.html#thank-you",
    "title": "Analysis of Broadway Show Synopses and their Effect on Weekly Grosses",
    "section": "Thank you!",
    "text": "Thank you!"
  },
  {
    "objectID": "musicalpresentation.html#source",
    "href": "musicalpresentation.html#source",
    "title": "Analysis of Broadway Show Synopses and their Effect on Weekly Grosses",
    "section": "Source",
    "text": "Source\nTidyTuesday Dataset\nBroadway Weekly Grosses from Playbill. Includes data on revenue and attendance figures for theatres that are a part of The Broadway League."
  },
  {
    "objectID": "shinyappvalentines.html",
    "href": "shinyappvalentines.html",
    "title": "Julia Aceron Portfolio",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(shiny)\n  historical_spending &lt;-readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-02-13/historical_spending.csv')\n\nRows: 13 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (10): Year, PercentCelebrating, PerPerson, Candy, Flowers, Jewelry, Gree...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n# Define UI for application \nui &lt;- fluidPage(\n  \n    # Application title\n    titlePanel(\"Valentine's Day Interactive Map\"),\n\n    # Sidebar with a slider input for number of bins \n    sidebarLayout(\n        sidebarPanel(\n            uiOutput(\"year_slider_ui\"),\n            selectInput(\n          inputId = \"y_axis_variable\",\n          label = \"Select a Variable to Plot (Money Spent on): \", \n          choices = c(\"Candy\", \"Flowers\", \"Jewelry\", \"GreetingCards\", \"EveningOut\", \"Clothing\", \"GiftCards\"),\n          selected = \"Candy\"\n        )\n        ),\n\n        # Show a plot of the generated distribution\n        mainPanel(\n           textOutput(\"selected_years\"),\n           tableOutput(\"filtered_data\"),\n           plotOutput(\"valentines_plot\")\n        )\n    )\n)\n\n# Define server logic required to draw a histogram\nserver &lt;- function(input, output, session) {\n  \n  output$year_slider_ui &lt;- renderUI({\n    req(historical_spending)\n    req(historical_spending$Year)\n    \nsliderInput(\n  \"year_slider\", \n  \"Select Year Range:\", \n  min = min(historical_spending$Year, na.rm = TRUE),\n  max = max(historical_spending$Year, na.rm = TRUE),\n  value = c(min(historical_spending$Year, na.rm = TRUE), max(historical_spending$Year, na.rm = TRUE)),\n              step = 1, sep = \"\")\n\n })\n  \n  filtered_data &lt;- reactive({\n    req(input$year_slider)\n    historical_spending |&gt; \n      filter(Year &gt;= input$year_slider[1], Year &lt;= input$year_slider[2])\n  })\n   output$selected_years &lt;- renderText({\n    req(input$year_slider)\n    paste(\"Selected Year Range:\", input$year_slider[1], \"to\", input$year_slider[2])\n  })\n  \n  # Show the filtered dataset\n  output$valentines_plot &lt;- renderPlot({\n    req(filtered_data())\n    req(input$y_axis_variable)\n    \n    ggplot(filtered_data(), aes(x = Year, y = .data[[input$y_axis_variable]])) +\n      geom_line(color = \"pink\") +\n      geom_point(color = \"darkgreen\") +\n      labs(\n        title = paste(\"Year vs Money Spent on \", input$y_axis_variable),\n        x = \"Year\",\n        y = input$y_axis_variable\n      ) +\n      theme_minimal()\n    \n})\n  \n  output$filtered_data &lt;- renderTable({\n    filtered_data()\n  })\n  \n}\n# Run the application \nshinyApp(ui = ui, server = server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Julia Aceron",
    "section": "",
    "text": "Hello! My name is Julia Aceron, and I am a freshman at Pomona College! I intend to major either in Computer Science or Mathematics and minor in Data Science. In my free time, I love to sing, play guitar, songwrite, read, and watch movies."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "John A. Rowland High School | Rowland Heights, CA High School Diploma | August 2020 - June 2024\nPomona College | Claremont, CA Freshman | Mathematics/Computer Science Major (intended) | Data Science Minor (intended) | August 2024 - May 2028"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "",
    "text": "John A. Rowland High School | Rowland Heights, CA High School Diploma | August 2020 - June 2024\nPomona College | Claremont, CA Freshman | Mathematics/Computer Science Major (intended) | Data Science Minor (intended) | August 2024 - May 2028"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About",
    "section": "Experience",
    "text": "Experience\nKumon Math and Reading Center | Primary Instructor | March 2022 - August 2024\nPomona Academy for Youth Success | Student Advisory Board Leader | August 2022 - August 2024"
  },
  {
    "objectID": "WAIDatasetSQL.html",
    "href": "WAIDatasetSQL.html",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "",
    "text": "library(tidyverse)\nlibrary(dplyr)\nlibrary(DBI)\nlibrary(shiny)"
  },
  {
    "objectID": "WAIDatasetSQL.html#plan",
    "href": "WAIDatasetSQL.html#plan",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "",
    "text": "library(tidyverse)\nlibrary(dplyr)\nlibrary(DBI)\nlibrary(shiny)"
  },
  {
    "objectID": "WAIDatasetSQL.html#create-sql-connection",
    "href": "WAIDatasetSQL.html#create-sql-connection",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "Create SQL Connection",
    "text": "Create SQL Connection"
  },
  {
    "objectID": "WAIDatasetSQL.html#show-database-tables",
    "href": "WAIDatasetSQL.html#show-database-tables",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "Show Database Tables",
    "text": "Show Database Tables\n\nSHOW TABLES;\n\n\n7 records\n\n\nTables_in_wai\n\n\n\n\nCodebook\n\n\nMeasurements\n\n\nMeasurements_pre2020\n\n\nPI_Info\n\n\nPI_Info_OLD\n\n\nSubjects\n\n\nSubjects_pre2020"
  },
  {
    "objectID": "WAIDatasetSQL.html#create-table-for-the-plot",
    "href": "WAIDatasetSQL.html#create-table-for-the-plot",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "Create table for the plot",
    "text": "Create table for the plot\n\nSELECT PI_Info.Identifier, PI_Info.AuthorsShortList, Frequency, AVG(Absorbance) AS mean_absorbance, PI_Info.Year\nFROM PI_Info\nLEFT JOIN Measurements ON PI_Info.Identifier = Measurements.Identifier\nWHERE Measurements.Identifier IN (\"Abur_2014\", \"Feeney_2017\", \"Groon_2015\", \"Lewis_2015\", \"Liu_2008\", \"Rosowski_2012\", \"Shahnaz_2006\", \"Shaver_2013\", \"Sun_2016\", \"Voss_1994\", \"Voss_2010\", \"Werner_2010\") AND Frequency &lt; 8000 AND Frequency &gt; 200\nGROUP BY Identifier, Frequency;"
  },
  {
    "objectID": "WAIDatasetSQL.html#create-legend-for-the-plot",
    "href": "WAIDatasetSQL.html#create-legend-for-the-plot",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "Create legend for the plot",
    "text": "Create legend for the plot\n\nSELECT AuthorsShortList, Year, COUNT(DISTINCT SubjectNumber, Ear) AS N, Instrument, Frequency, AVG(Absorbance) AS mean_absorbance, CONCAT(AuthorsShortList, \" (\",Year,\") \", \"N=\", COUNT(DISTINCT SubjectNumber, Ear), \"; \", Instrument) AS legend\nFROM PI_Info AS p\nLEFT JOIN Measurements AS m ON m.Identifier = p.Identifier \nWHERE p.Identifier IN (\"Abur_2014\", \"Feeney_2017\", \"Groon_2015\", \"Lewis_2015\", \"Liu_2008\", \"Rosowski_2012\", \"Shahnaz_2006\", \"Shaver_2013\", \"Sun_2016\", \"Voss_1994\", \"Voss_2010\", \"Werner_2010\") AND Frequency &lt; 8000 AND Frequency &gt; 200\nGROUP BY p.Identifier, m.Instrument, Frequency"
  },
  {
    "objectID": "WAIDatasetSQL.html#plot",
    "href": "WAIDatasetSQL.html#plot",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "Plot",
    "text": "Plot\n\nlabels |&gt; ggplot(aes(x = Frequency, y = mean_absorbance, color = legend, group = legend)) +\n  labs(\n    title = \"Mean absorbance from each publication in WAI database\",\n    x = \"Frequency (Hz)\", \n    y = \"Mean Absorbance\",\n    color = NULL\n  ) +\n  geom_line() +\n  scale_x_log10(\n    breaks = c(200, 400, 600, 800, 1000, 2000, 4000, 6000, 8000),\n    labels = c(\"200\", \"400\", \"600\", \"800\", \"1000\", \"2000\", \"4000\", \"6000\", \"8000\") \n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 12),\n    legend.text = element_text(size = 5),\n    legend.background = element_rect(fill = \"white\", color = \"black\"),\n    legend.position = c(0.2,0.85),\n    legend.box.margin = margin(0, 0, 0, 0),      \n    legend.key.size = unit(0.2, \"cm\"),\n    legend.key.height = unit(0.2, \"cm\"),\n    legend.box = \"horizontal\"\n  )"
  },
  {
    "objectID": "WAIDatasetSQL.html#description",
    "href": "WAIDatasetSQL.html#description",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "DESCRIPTION",
    "text": "DESCRIPTION\n\nTo create the graph above, there were two main steps that I took. The first step was to join the tables Measurements and PI_Info by the Identifier column so that I have a new table that describes the frequencies and mean absorbances for each publication. The second step was to create the legend. I joined the same tables again so that the new table would show the author’s label, year, subject size, and corresponding instrument for each publication. As a result, I created a plot that demonstrates the mean absorbance for all of the selected publications depending on the frequencies."
  },
  {
    "objectID": "WAIDatasetSQL.html#count-of-subjects-for-each-group-of-interest-in-each-publication",
    "href": "WAIDatasetSQL.html#count-of-subjects-for-each-group-of-interest-in-each-publication",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "Count # of Subjects for each group of interest in each publication",
    "text": "Count # of Subjects for each group of interest in each publication\n\nSELECT Sex, Race, Ethnicity, Identifier, SubjectNumber,\nCOUNT(*) \nFROM Subjects \nWHERE Identifier IN (\"Abur_2014\", \"Feeney_2017\", \"Groon_2015\", \"Lewis_2015\", \"Liu_2008\", \"Rosowski_2012\", \"Shahnaz_2006\", \"Shaver_2013\", \"Sun_2016\", \"Voss_1994\", \"Voss_2010\", \"Werner_2010\")\nGROUP BY Sex, Race, Ethnicity, Identifier, SubjectNumber\n\n\nDisplaying records 1 - 10\n\n\nSex\nRace\nEthnicity\nIdentifier\nSubjectNumber\nCOUNT(*)\n\n\n\n\nFemale\nUnknown\nUnknown\nAbur_2014\n1\n1\n\n\nFemale\nUnknown\nUnknown\nAbur_2014\n3\n1\n\n\nFemale\nUnknown\nUnknown\nAbur_2014\n4\n1\n\n\nFemale\nUnknown\nUnknown\nAbur_2014\n6\n1\n\n\nFemale\nUnknown\nUnknown\nAbur_2014\n7\n1\n\n\nFemale\nUnknown\nUnknown\nAbur_2014\n8\n1\n\n\nFemale\nUnknown\nUnknown\nAbur_2014\n10\n1\n\n\nUnknown\nUnknown\nUnknown\nFeeney_2017\n103\n1\n\n\nUnknown\nUnknown\nUnknown\nFeeney_2017\n104\n1\n\n\nUnknown\nUnknown\nUnknown\nFeeney_2017\n106\n1"
  },
  {
    "objectID": "WAIDatasetSQL.html#get-frequency-and-mean-absorbance-for-race",
    "href": "WAIDatasetSQL.html#get-frequency-and-mean-absorbance-for-race",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "Get frequency and mean absorbance for race",
    "text": "Get frequency and mean absorbance for race\n\nSELECT s.Race, Frequency, s.Identifier, AVG(Absorbance) AS mean_absorbance\nFROM Subjects AS s\nLEFT JOIN Measurements AS m ON m.SubjectNumber = s.SubjectNumber\nWHERE s.Identifier IN (\"Rosowski_2012\")\nGROUP BY s.Race, Frequency, s.Identifier;\n\n\nSELECT s.Sex, Frequency, s.Identifier, AVG(Absorbance) AS mean_absorbance\nFROM Subjects AS s\nLEFT JOIN Measurements AS m ON m.SubjectNumber = s.SubjectNumber\nWHERE s.Identifier IN (\"Rosowski_2012\")\nGROUP BY s.Sex, Frequency, s.Identifier;\n\n\nSELECT s.Ethnicity, Frequency, s.Identifier, AVG(Absorbance) AS mean_absorbance\nFROM Subjects AS s\nLEFT JOIN Measurements AS m ON m.SubjectNumber = s.SubjectNumber\nWHERE s.Identifier IN (\"Rosowski_2012\")\nGROUP BY s.Ethnicity, Frequency, s.Identifier;"
  },
  {
    "objectID": "WAIDatasetSQL.html#plots",
    "href": "WAIDatasetSQL.html#plots",
    "title": "Mean Absorbance by Publication Data Analysis",
    "section": "Plots",
    "text": "Plots\n\nplot_race |&gt; \n  ggplot(aes(x = Frequency, y = mean_absorbance, color = Race)) +\ngeom_smooth(method = \"loess\", se = FALSE, size = 1) +\n  labs(\n    title = \"Mean Absorbance by Frequency (Faceted by Race)\",\n    x = \"Frequency (Hz)\",\n    y = \"Mean Absorbance\",\n    color = \"\"\n  ) +\n  scale_x_log10() +\n  theme_minimal() +\n  facet_wrap(~ Race)\n\n\n\n\n\n\n\n\n\nplot_sex |&gt; \n  ggplot(aes(x = Frequency, y = mean_absorbance, color = Sex)) +\ngeom_smooth(method = \"loess\", se = FALSE, size = 1) +\n  labs(\n    title = \"Mean Absorbance by Frequency\",\n    x = \"Frequency (Hz)\",\n    y = \"Mean Absorbance\",\n    color = \"\"\n  ) +\n  scale_x_log10() +\n  theme_minimal() \n\n\n\n\n\n\n\n\n\nplot_ethnicity |&gt; \n  ggplot(aes(x = Frequency, y = mean_absorbance, color = Ethnicity)) +\ngeom_smooth(method = \"loess\", se = FALSE, size = 1) +\n  labs(\n    title = \"Mean Absorbance by Frequency (Faceted by Ethnicity)\",\n    x = \"Frequency (Hz)\",\n    y = \"Mean Absorbance\",\n    color = \"\"\n  ) +\n  scale_x_log10() +\n  theme_minimal() +\n  facet_wrap(~ Ethnicity)\n\n\n\n\n\n\n\n\n\ndbDisconnect(con_wai)\n\nSource: This dataset was from the WAI Database. Wideband Acoustic Immittance (WAI) Database\nVoss, SE. 2019. “Resource Review.” Ear and Hearing 40 (6)."
  },
  {
    "objectID": "MusicalSynopses.html",
    "href": "MusicalSynopses.html",
    "title": "Synopsis Vs Weekly Gross",
    "section": "",
    "text": "Library\n\nlibrary(tidyverse)\n\n\n\nTidyTuesday Data\n\ngrosses &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-28/grosses.csv', guess_max = 40000)\nsynopses &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-28/synopses.csv')\ncpi &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-28/cpi.csv')\npre_1985_starts &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-28/pre-1985-starts.csv')\n\n\n\nEffect of Words in a Synopsis on Weekly Gross Overall\n\nJoining the ‘grosses’ and ‘synopses’ dataset\n\nshows_combined &lt;- \n  dplyr::full_join(grosses, synopses, by = \"show\") \n\n\n\nWord: Musical\n\nsynopsis_musical_count &lt;- shows_combined |&gt;\n  mutate(musical_count = str_count(synopsis, \"(?i)\\\\bmusical\\\\b\")) |&gt; # Counting the number of times 'musical' appears in the synopsis\n  select(show, weekly_gross, synopsis, musical_count) # Selecting these specific columns in the dataframe\n\nsynopsis_musical_count |&gt; \n  filter(!is.na(musical_count)) |&gt; # Filtering for values that are not NA\n  mutate(weekly_gross = weekly_gross/1000) |&gt; # Creating a new column that puts the gross in thousands \n  select(musical_count, weekly_gross) |&gt; # Selecting these columns\n  arrange(desc(musical_count)) |&gt; # Arranging in descending order by musical_count\n  ggplot(aes(x = as.factor(musical_count), y = weekly_gross)) + # Defining the variables and ordering musical_count \n  geom_boxplot(fill = \"pink\", color = \"black\", outlier.color = \"lightgreen\") + # Assigning colors\n  labs (\n    title = \"Relationship Between 'Musical' Count in Synopsis and Weekly Gross\",\n    subtitle = \"Influence of 'Musical' keyword frequency\", \n    x = \"Number of Times 'Musical' Appears in Synopsis\", \n    y = \"Weekly Gross Revenue (in thousands)\"\n  ) + # Renaming variables for clarity\n  theme_minimal(base_size = 14) + # Theme \n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),  # Centering and bold the title\n    plot.subtitle = element_text(hjust = 0.5, size = 12, face = \"italic\"),  # Subtitle formatting\n    axis.title = element_text(face = \"bold\"),  # Bolding axis labels\n    axis.text = element_text(size = 12),  # Making axis text bigger\n    panel.grid.major = element_line(color = \"gray\", size = 0.5),  # Lighter gridlines\n    panel.grid.minor = element_blank(), # No minor gridlines\n  )\n\n\n\n\n\n\n\n\nThe graph above illustrates the difference between the weekly grosses depending on the amount of times the word “musical” appears in synopses. From this graph, we can determine that there is little correlation between the weekly grosses and the word “musical”. In other words, it seems that it does not matter whether the word “musical” appears more in the synopsis. For example, the median weekly gross for count = 1 and count = 4 does not have a huge difference. Therefore, the number of times the word “musical” appears in the synopsis does not make a difference.\n\n\nWord: Play\n\nsynopsis_play_count &lt;- shows_combined |&gt;\n  mutate(play_count = str_count(synopsis, \"(?i)\\\\bplay\\\\b\")) |&gt;\n  select(show, weekly_gross, synopsis, play_count)\n\nsynopsis_play_count |&gt;\n  filter(!is.na(play_count)) |&gt;\n  mutate(weekly_gross = weekly_gross/1000) |&gt;\n  select(play_count, weekly_gross) |&gt;\n  arrange(desc(play_count)) |&gt;\n  ggplot(aes(x = as.factor(play_count), y = weekly_gross)) +\n  geom_boxplot(fill = \"pink\", color = \"black\", outlier.color = \"lightgreen\") +\n  labs (\n    title = \"Relationship Between 'Play' Count in Synopsis and Weekly Gross\",\n    subtitle = \"Influence of 'Play' keyword frequency\", \n    x = \"Number of Times 'Play' Appears in Synopsis\", \n    y = \"Weekly Gross Revenue (in thousands)\"\n  ) +\n  theme_minimal(base_size = 14) + # Theme \n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),  # Centering and bold the title\n    plot.subtitle = element_text(hjust = 0.5, size = 12, face = \"italic\"),  # Subtitle formatting\n    axis.title = element_text(face = \"bold\"),  # Bolding axis labels\n    axis.text = element_text(size = 12),  # Making axis text bigger\n    panel.grid.major = element_line(color = \"gray\", size = 0.5),  # Lighter gridlines\n    panel.grid.minor = element_blank(), # No minor gridlines\n  )\n\n\n\n\n\n\n\n\nThe graph above is similar to the graph comparing musical count in synopses and the weekly gross. These box-plots show a similar trend in which there is little correlation between the play count and the weekly gross.\n\n\n\nEffect of Artistic Characters on Weekly Gross\n\nartist_characters &lt;- shows_combined |&gt;\n  mutate(synopsis_lower = str_to_lower(synopsis),\n         is_artist = str_detect(synopsis_lower, \"(singer|playwright|actor|chorus|dancer)\")) |&gt;\n  select(show, weekly_gross, synopsis, is_artist)\n\n\nartist_characters |&gt;\n  filter(!is.na(is_artist)) |&gt;\n  mutate(weekly_gross = weekly_gross/1000) |&gt;\n  select(is_artist, weekly_gross) |&gt;\n  arrange(desc(is_artist)) |&gt;\n  ggplot(aes(x = is_artist, y = weekly_gross)) +\n  geom_boxplot(fill = \"pink\", color = \"black\", outlier.color = \"lightgreen\") +\n  labs (\n    title = \"Shows with Artistic Characters vs Weekly Gross\",\n    subtitle = \"Impact of Artistic Themes on Revenue\",\n    x = \"Contains Artistic Characters\", \n    y = \"Weekly Gross Revenue\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),  # Centering and bold the title\n    plot.subtitle = element_text(hjust = 0.5, size = 12, face = \"italic\"),  # Subtitle formatting\n    axis.title = element_text(face = \"bold\"),  # Bolding axis labels\n    axis.text = element_text(size = 12),  # Making axis text bigger\n    panel.grid.major = element_line(color = \"gray\", size = 0.5),  # Lighter gridlines\n    panel.grid.minor = element_blank(), # No minor gridlines\n  )\n\n\n\n\n\n\n\n\nThis graph determines whether the synopsis features an artistic character and its affect on weekly gross. We can define an artistic character as a singer, playwright, actor, chorus (member), and/or dancer. It was hypothesized that it would increase weekly gross because artistic characters could appeal as more relatable to audiences. The results support this hypothesis because when the synopsis does mention an artistic character, the interquartile range is higher.\n\n\nEffect of Synopsis Length on Weekly Gross\n\nwords_synopsis &lt;- shows_combined |&gt;\n  mutate(synopsis_count = str_count(synopsis, \"\\\\S+\")) |&gt;\n  select(show, weekly_gross, synopsis, synopsis_count)\n\nwords_synopsis |&gt;\n  filter(!is.na(synopsis_count)) |&gt;\n  mutate(weekly_gross = weekly_gross/1000) |&gt;\n  select(synopsis_count, weekly_gross) |&gt;\n  arrange(desc(synopsis_count)) |&gt;\n  head(1000) |&gt;\n  ggplot(aes(x = as.factor(synopsis_count), y = weekly_gross)) +\n  geom_boxplot(fill = \"pink\", color = \"black\", outlier.color = \"lightgreen\") +\n  geom_jitter() +\n  labs (\n    title = \"Top Synopsis Lengths vs Weekly Gross\",\n    x = \"Synopsis Length\", \n    y = \"Weekly Gross\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),  # Centering and bold the title\n    plot.subtitle = element_text(hjust = 0.5, size = 12, face = \"italic\"),  # Subtitle formatting\n    axis.title = element_text(face = \"bold\"),  # Bolding axis labels\n    axis.text = element_text(size = 12),  # Making axis text bigger\n    panel.grid.major = element_line(color = \"gray\", size = 0.5),  # Lighter gridlines\n    panel.grid.minor = element_blank(), # No minor gridlines\n  )\n\n\n\n\n\n\n\n\nThis graph demonstrates the comparison between how long the synopsis is and the weekly gross of each show. It took the top 1000 shows with the highest lengths. From the box-plots, no correlation can be seen between the length and weekly gross.\n\n\nEffect of Words in a Synopsis on Weekly Gross Overall\n\nWord: Musical\n\nshows_combined$synopsis &lt;- as.character(shows_combined$synopsis)\n\nshows_combined$is_musical &lt;- str_detect(shows_combined$synopsis, regex(\"musical\", ignore_case = TRUE))\n\nshows_combined |&gt;\n  filter(!is.na(is_musical)) |&gt;\n  mutate(weekly_gross = weekly_gross/1000) |&gt;\n  select(weekly_gross_overall, is_musical) |&gt;\n  ggplot(aes(x = is_musical, y = log10(weekly_gross_overall))) + \n  geom_boxplot(fill = \"pink\", color = \"black\", outlier.color = \"lightgreen\") +\n  scale_y_log10() +\n  labs (\n    title = \"Synopsis with 'Musical' vs Weekly Gross Overall\",\n    x = \"Musical?\", \n    y = \"Weekly Gross Overall\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),  # Centering and bold the title\n    plot.subtitle = element_text(hjust = 0.5, size = 12, face = \"italic\"),  # Subtitle formatting\n    axis.title = element_text(face = \"bold\"),  # Bolding axis labels\n    axis.text = element_text(size = 12),  # Making axis text bigger\n    panel.grid.major = element_line(color = \"gray\", size = 0.5),  # Lighter gridlines\n    panel.grid.minor = element_blank(), # No minor gridlines\n  )\n\n\n\n\n\n\n\n\nThese two box-plots determine whether a synopsis with the word “musical” in it or not affects the weekly gross OVERALL. This is difference from the first graph regarding musical count because it is not counting the amount of times “musical” appears, and it is compared to the weekly gross overall for all shows. This trend shows no difference since the medians are about the same.\n\n\nWord: Play\n\nshows_combined$synopsis &lt;- as.character(shows_combined$synopsis)\n\nshows_combined$is_play &lt;- str_detect(shows_combined$synopsis, regex(\"play\", ignore_case = TRUE))\n\nshows_combined\n\n# A tibble: 47,524 × 17\n   week_ending week_number weekly_gross_overall show        theatre weekly_gross\n   &lt;date&gt;            &lt;dbl&gt;                &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;          &lt;dbl&gt;\n 1 1985-06-09            1              3915937 42nd Street St. Ja…       282368\n 2 1985-06-09            1              3915937 A Chorus L… Sam S.…       222584\n 3 1985-06-09            1              3915937 Aren't We … Brooks…       249272\n 4 1985-06-09            1              3915937 Arms and t… Circle…        95688\n 5 1985-06-09            1              3915937 As Is       Lyceum…        61059\n 6 1985-06-09            1              3915937 Big River   Eugene…       255386\n 7 1985-06-09            1              3915937 Biloxi Blu… Neil S…       306839\n 8 1985-06-09            1              3915937 Brighton B… 46th S…       107392\n 9 1985-06-09            1              3915937 Cats        Winter…       461880\n10 1985-06-09            1              3915937 Doubles     Ritz T…        47452\n# ℹ 47,514 more rows\n# ℹ 11 more variables: potential_gross &lt;dbl&gt;, avg_ticket_price &lt;dbl&gt;,\n#   top_ticket_price &lt;dbl&gt;, seats_sold &lt;dbl&gt;, seats_in_theatre &lt;dbl&gt;,\n#   pct_capacity &lt;dbl&gt;, performances &lt;dbl&gt;, previews &lt;dbl&gt;, synopsis &lt;chr&gt;,\n#   is_musical &lt;lgl&gt;, is_play &lt;lgl&gt;\n\nshows_combined |&gt;\n  filter(!is.na(is_play)) |&gt;\n  select(weekly_gross_overall, is_play) |&gt;\n  ggplot(aes(x = is_play, y = log10(weekly_gross_overall))) + \n  geom_boxplot() +\n  scale_y_log10() +\n  labs (\n    title = \"Synopsis with 'Play' vs Weekly Gross Overall\",\n    x = \"Play?\", \n    y = \"Weekly Gross Overall\"\n  )\n\n\n\n\n\n\n\n\nThis graph is similar to the previous one, except it determines whether “play” appears in the synopsis and its effect on the weekly gross overall. The trend is almost the same as the last, for it shows little difference between the two variables.\nTidyTuesday Dataset\nBroadway Weekly Grosses from Playbill. Includes data on revenue and attendance figures for theatres that are a part of The Broadway League."
  }
]